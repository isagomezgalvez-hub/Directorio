{"version":3,"sources":["components/CategoryAdd.js","api/getGif.js","components/GifGridItems.js","components/GitList.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["CategoryAdd","setCategories","useState","inputValue","SetInputValue","onSubmit","e","preventDefault","trim","length","categories","type","placeholder","value","onChange","target","disabled","getGif","category","a","url","encodeURI","fetch","response","json","data","gifs","map","gif","id","title","images","downsized_medium","GifGridItems","className","src","alt","GridList","loading","state","setState","useEffect","then","img","useFetchGifs","GitExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,cAAiB,EACXC,mBAAS,IADE,mBACxCC,EADwC,KAC5BC,EAD4B,KAgB7C,OACC,gCACC,8CACA,uBAAMC,SAZY,SAACC,GACrBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAmBO,OAC5CN,EAAc,MAOZ,UACA,uBACCO,KAAK,OACLC,YAAY,sBACZC,MAAOV,EACPW,SArBqB,SAACR,GACzBF,EAAcE,EAAES,OAAOF,UAsBrB,wBACAG,SAAuB,IAAbb,EADV,wC,+BC7BUc,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UAAUH,GAD3C,+DAEEI,MAAMF,GAFR,cAEfG,EAFe,gBAGEA,EAASC,OAHX,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GACtB,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATd,kBAadM,GAbc,4CAAH,sDCaJO,EAXM,SAAC,GAAiB,EAAhBJ,GAAiB,IAAdC,EAAa,EAAbA,MAAMV,EAAO,EAAPA,IAE/B,OACC,sBAAKc,UAAU,yCAAf,UACC,4BAAG,qBAAKC,IAAKf,EAAKgB,IAAKN,MACvB,4BAAIA,QCqBQO,EAxBE,SAAC,GAAc,IAAbnB,EAAY,EAAZA,SAAY,ECAH,SAACA,GAAY,IAAD,EACbhB,mBAAS,CAClCuB,KAAK,GACLa,SAAQ,IAH8B,mBAChCC,EADgC,KACzBC,EADyB,KAkBvC,OAXAC,qBAAW,WAEVxB,EAAOC,GAAUwB,MAAK,SAAAC,GACpBH,EAAS,CACRf,KAAMkB,EACNL,SAAS,SAGV,CAACpB,IAGGqB,EDjBmBK,CAAa1B,GAA/BO,EADsB,EACtBA,KAAMa,EADgB,EAChBA,QAEd,OACC,gCACC,6BAAKpB,IAEN,sBAAKgB,UAAU,YAAf,UAEGI,GAAW,mBAAGJ,UAAU,mCAAb,qBAGZT,EAAKE,KAAK,SAACgB,GAAD,OACT,cAAC,EAAD,eAEIA,GADCA,EAAId,cEYCgB,EAzBM,WAAO,IAAD,EAEU3C,mBAAS,CAAC,SAFpB,mBAEnBQ,EAFmB,KAEPT,EAFO,KAK1B,OACC,gCACC,gDACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,6BACES,EAAWiB,KAAI,SAACT,GAAD,OACf,cAAC,EAAD,CACAA,SAAUA,GACLA,Y,MCdV4B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.67870364.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types'\n\nexport const CategoryAdd = ({setCategories})=>{\nconst[inputValue, SetInputValue] = useState('')\n\nconst handleInputChange =(e)=>{\n\tSetInputValue(e.target.value)\n}\n\nconst handleSubmit = (e)=>{\n\te.preventDefault()\n\n\tif(inputValue.trim().length > 2){\n\t\tsetCategories(categories => [inputValue,...categories])\n\tSetInputValue('')\n\t}\n}\n\n\treturn(\n\t\t<div>\n\t\t\t<h2>Add Category</h2>\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t<input\n\t\t\t\ttype='text'\n\t\t\t\tplaceholder='Añadir Categoria'\n\t\t\t\tvalue={inputValue}\n\t\t\t\tonChange={handleInputChange}\n\t\t\t />\n\t\t\t<button\n\t\t\tdisabled={inputValue===0}>\n\t\t\t\tAñadir Categoria</button>\n\t\t\t</form>\n\t\t</div>\n\t\n\t)\n}\n\n\nCategoryAdd.propTypes = {\n\tsetCategories: PropTypes.func.isRequired\n}","export const getGif = async (category) => {\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=fAYiZFMANyVAJf7SMjUHgXYXcOHsboL4`\n\tconst response = await fetch(url)\n\tconst { data } = await response.json();\n\n\tconst gifs = data.map((gif) => {\n\t\treturn {\n\t\t\tid: gif.id,\n\t\t\ttitle: gif.title,\n\t\t\turl: gif.images.downsized_medium.url\n\t\t}\n\n\t})\n\treturn gifs\n}\n","import React from 'react';\n\nconst GifGridItems = ({id,title,url})=>{\n\n\treturn(\n\t\t<div className=\"card animate__animated animate__fadeIn\">\n\t\t\t<p><img src={url} alt={title}></img></p>\n\t\t\t<p>{title}</p>\n\t\t</div>\n\t)\n}\n\n\nexport default GifGridItems","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport GifGridItems from './GifGridItems'\n\nconst GridList = ({category})=>{\n\tconst { data, loading } = useFetchGifs(category);\n\n\treturn(\n\t\t<div>\n\t\t\t<h3>{category}</h3>\n\t\n\t\t<div className=\"card-grid\">\n\t\t\t\n\t\t\t\t{loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n\t\t\n\t\t\t{\n\t\t\t\tdata.map( (img) =>(\n\t\t\t\t\t<GifGridItems \n\t\t\t\t\tkey={img.id}\n\t\t\t\t\t{...img}/>\n\t\t\t\t))\n\t\t\t}\n\t\n\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default GridList","import { useEffect, useState } from \"react\"\nimport { getGif } from \"../api/getGif\"\n\n\nexport const useFetchGifs = (category)=>{\n\tconst [state, setState] = useState({\n\t\tdata:[],\n\t\tloading:true,\n\t\n\t})\n\n\tuseEffect( () => {\n\n\t\tgetGif(category).then(img=>{\n\t\t\t\tsetState({\n\t\t\t\t\tdata: img,\n\t\t\t\t\tloading: false\n\t\t\t\t});\n\t\t})\n\t}, [category])\n\n\t\n\treturn state\n}","import React, { useState } from 'react';\nimport { CategoryAdd } from './components/CategoryAdd';\nimport GridList from './components/GitList';\n\n\nconst GitExpertApp = () => {\n\n\tconst [categories, setCategories] = useState(['Cats']);\n\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>Git Expert App</h2>\n\t\t\t<hr />\n\t\t\t<CategoryAdd setCategories={setCategories} />\n\t\t\n\t\t\t<ol>\n\t\t\t\t{categories.map((category) => \n\t\t\t\t\t<GridList \n\t\t\t\t\tcategory={category} \n\t\t\t\t\tkey={category}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\n\t\t\t</ol>\n\t\t</div>\n\t)\n}\n/// GitExpertApp\n\nexport default GitExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GitExpertApp from './GitExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n \n    <GitExpertApp/>,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}